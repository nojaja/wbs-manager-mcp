{
  "name": "wbs-mcp",
  "displayName": "WBS MCP",
  "description": "MCP-enabled VS Code extension for Work Breakdown Structure management",
  "version": "0.1.0",
  "publisher": "nojaja",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nojaja/wbs-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/nojaja/wbs-mcp/issues"
  },
  "homepage": "https://github.com/nojaja/wbs-mcp#readme",
  "keywords": [
    "wbs",
    "work breakdown structure",
    "project management",
    "mcp",
    "model context protocol",
    "copilot",
    "collaboration"
  ],
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension/index.js",
  "contributes": {
    "commands": [
      {
        "command": "mcpWbs.start",
        "title": "MCP WBS: Start Local Server",
        "icon": "$(play)"
      },
      {
        "command": "wbsTree.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "wbsTree.openTask",
        "title": "開く",
        "icon": "$(go-to-file)"
      },
      {
        "command": "wbsTree.createTask",
        "title": "新しいタスク",
        "icon": "$(add)"
      },
      {
        "command": "wbsTree.deleteTask",
        "title": "削除",
        "icon": "$(trash)"
      },
      {
        "command": "wbsTree.addChildTask",
        "title": "子タスク追加",
        "icon": "$(add)"
      },
      {
        "command": "artifactTree.refresh",
        "title": "成果物を再読み込み",
        "icon": "$(refresh)"
      },
      {
        "command": "artifactTree.createArtifact",
        "title": "成果物を追加",
        "icon": "$(add)"
      },
      {
        "command": "artifactTree.editArtifact",
        "title": "成果物を編集",
        "icon": "$(edit)"
      },
      {
        "command": "artifactTree.deleteArtifact",
        "title": "成果物を削除",
        "icon": "$(trash)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "wbsTree",
          "name": "WBS Projects",
          "icon": "$(project)"
        },
        {
          "id": "artifactTree",
          "name": "Artifacts",
          "icon": "$(file)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "wbsTree.refresh",
          "when": "view == wbsTree",
          "group": "navigation"
        },
        {
          "command": "wbsTree.createTask",
          "when": "view == wbsTree",
          "group": "navigation"
        },
        {
          "command": "artifactTree.refresh",
          "when": "view == artifactTree",
          "group": "navigation"
        },
        {
          "command": "artifactTree.createArtifact",
          "when": "view == artifactTree",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "wbsTree.openTask",
          "when": "view == wbsTree && viewItem == task",
          "group": "inline"
        },
        {
          "command": "wbsTree.deleteTask",
          "when": "view == wbsTree && viewItem == task",
          "group": "inline@1"
        },
        {
          "command": "wbsTree.addChildTask",
          "when": "view == wbsTree && viewItem == task",
          "group": "inline@2"
        },
        {
          "command": "artifactTree.editArtifact",
          "when": "view == artifactTree && viewItem == artifact",
          "group": "inline"
        },
        {
          "command": "artifactTree.deleteArtifact",
          "when": "view == artifactTree && viewItem == artifact",
          "group": "inline@1"
        }
      ]
    },
    "mcpServerDefinitionProviders": [
      {
        "id": "wbs-mcp",
        "label": "WBS MCP"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run test && npm run build",
    "build": "npm run build:ts && npm run build:webview && npm run docs && npx depcruise src --output-type dot > ./docs/dependency-cruiser.dot",
    "build:ts": "tsc -p ./",
    "build:webview": "webpack --config webpack.webview.config.js --mode production",
    "watch:webview": "webpack --config webpack.webview.config.js --mode development --watch",
    "test": "npm run test:unit",
    "test:unit": "npm run lint && jest --config=jest.config.js --coverage",
    "test:e2e": "jest --config=jest.e2e.config.js --runInBand",
    "lint": "eslint . --ext .ts && npx depcruise src",
    "lint:fix": "eslint . --ext .ts --fix",
    "start-server-dev": "node ./out/mcpServer/index.js",
    "start-extension-dev": "code --extensionDevelopmentPath=.",
    "docs": "typedoc --options typedoc.json"
  },
  "devDependencies": {
    "@babel/core": "^7.22.10",
    "@babel/preset-env": "^7.22.10",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.2",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.11.0",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.46.0",
    "@vue/compiler-sfc": "^3.3.4",
    "babel-loader": "^9.1.2",
    "css-loader": "^6.8.1",
    "dependency-cruiser": "^16.10.4",
    "eslint": "^9.37.0",
    "eslint-plugin-jsdoc": "^50.8.0",
    "eslint-plugin-sonarjs": "^3.0.5",
    "html-webpack-plugin": "^5.5.1",
    "jest": "^29.6.1",
    "mocha": "^10.2.0",
    "style-loader": "^3.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.4",
    "typedoc": "^0.28.14",
    "typedoc-plugin-markdown": "^4.3.0",
    "typescript": "^5.3.3",
    "typescript-eslint": "^8.46.0",
    "vue-loader": "^17.0.0",
    "webpack": "^5.99.8",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "express": "^4.18.2",
    "markdown-it": "^14.1.0",
    "uuid": "^9.0.1",
    "vue": "^3.3.4"
  }
}
